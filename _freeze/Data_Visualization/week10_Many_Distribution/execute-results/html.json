{
  "hash": "425c8a6a9b764537da94bb9ab5a956fc",
  "result": {
    "markdown": "---\ntitle: 'Many Distribution'\nauthor: 'Jinwon Lee'\ndate: '2023-05-08'\ncategories: [Visualization, Code, R]\npage-layout: full\nimage: \"./image/Distribution.png\"\noutput:\n  prettydoc::html_pretty:\n    theme: architect\n    highlight: github\neditor_options: \n  chunk_output_type: console\nmainfont: NanumGothic\n---\n\n\n\n\n# 9. Visualizing many distributions at once : 여러 분포 상태의 결합 시각화\n\n## 9.1. Visualizing distributions along the vertical axis – 가로축에 기준을 둔 분포 상태의 시각화\n\n### Figure 9.3\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data\ndata(lincoln_weather)\n\nlincoln_df <- lincoln_weather %>%\n  mutate(month_short = fct_recode(Month, Jan = 'January', Feb = 'February',\n                                  Mar = 'March', Apr = 'April', May = 'May',\n                                  Jun = 'June', Jul = 'July', Aug = 'August',\n                                  Sep = 'September', Oct = 'October',\n                                  Nov = 'November', Dec = 'December')) %>%\n  mutate(month_short = fct_rev(month_short))\n\nggplot(lincoln_df, aes(x = month_short, y = `Mean Temperature [F]`)) +\n  geom_boxplot(fill = 'grey90') +\n  xlab('Month') +\n  ylab('Mean Temperature (°F)') +\n  theme_classic() +\n  theme(plot.margin = margin(3, 7, 3, 1.5))\n```\n\n::: {.cell-output-display}\n![](week10_Many_Distribution_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n### Figure 9.5\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lincoln_df, aes(x = month_short, y = `Mean Temperature [F]`)) +\n  geom_violin(fill = 'grey90') +\n  xlab('Month') +\n  ylab('Mean Temperature (°F)') +\n  theme_classic() +\n  theme(plot.margin = margin(3, 7, 3, 1.5))\n```\n\n::: {.cell-output-display}\n![](week10_Many_Distribution_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### Figure 9.7\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lincoln_df, aes(x = month_short, y = `Mean Temperature [F]`)) +\n  geom_point(position = position_jitter(width = .15, height = 0, seed = 320), size = 1) +\n  xlab('Month') +\n  ylab('Mean Temperature (°F)') +\n  theme_classic() +\n  theme(plot.margin = margin(3, 7, 3, 1.5))\n```\n\n::: {.cell-output-display}\n![](week10_Many_Distribution_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### Figure 9.8\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lincoln_df, aes(x = month_short, y = `Mean Temperature [F]`)) +\n  geom_violin(color = 'transparent', fill = 'grey90') +\n  geom_point(position = position_jitter(width = .15, height = 0, seed = 320), size = 1) +\n  xlab('Month') +\n  ylab('Mean Temperature (°F)') +\n  theme_classic() +\n  theme(plot.margin = margin(3, 7, 3, 1.5))\n```\n\n::: {.cell-output-display}\n![](week10_Many_Distribution_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## 9.2. Visualizing distributions along the horizontal axis - 세로축에 기준을 둔 분포 상태의 시각화\n\n### Figure 9.9\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lincoln_df, aes(x = `Mean Temperature [F]`, y = `Month`)) +\n  geom_density_ridges(scale = 3, rel_min_height = 0.01,\n                      bandwidth = 3.4, fill = 'skyblue', color = 'white') + \n  scale_x_continuous(name = 'Mean Temperature (°F)',\n                     expand = c(0, 0), breaks = c(0, 25, 50, 75)) +\n  scale_y_discrete(name = NULL) +\n  theme_minimal() +\n  theme(axis.text.y = element_text(vjust = 0),\n        plot.margin = margin(3, 7, 3, 1.5))\n```\n\n::: {.cell-output-display}\n![](week10_Many_Distribution_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Figure 9.11\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_lengths <- read.csv('./data/movie_lengths.csv')\n\nggplot(movie_lengths, aes(x = length, y = year, group = year)) +\n  geom_density_ridges (scale = 10, size = 0.25,\n                       rel_min_height = 0.03, fill = 'grey85', na.rm = TRUE) + \n  scale_x_continuous(limits = c(0, 200),\n                     expand = c(0, 0),\n                     name = 'Length (Minutes)') +\n  scale_y_reverse(breaks = c(2000, 1980, 1960, 1940, 1920),\n                  limits = c(2005, 1903), expand = c(0, 0)) + \n  theme_light() +\n  theme(panel.border = element_blank(),\n        plot.margin = margin (3, 14, 3, 1.5))\n#> Picking joint bandwidth of 6.68\n```\n\n::: {.cell-output-display}\n![](week10_Many_Distribution_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### Figure 9.12\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_house_88_113 <- read.csv('./data/all_house_88_113.csv')\n\nggplot(all_house_88_113, aes(x = dim_1, y = year1,\n                             group = interaction(party_code, factor(year1)),\n                             fill = interaction(party_code, factor(year1)))) + \n  geom_density_ridges(scale = 5, size = 0.25, rel_min_height = 0.01, \n                      alpha = 0.9, color = 'white') +\n  scale_x_continuous(name = 'DW-NOMINATE score',\n                     limits = c(-.8, 1.3),\n                     breaks = seq(-1, 1, 0.25)) +\n  scale_y_reverse(name = 'Year', expand = c(0, 0),\n                  breaks = c(seq(2013, 1963, -10))) +\n  scale_fill_cyclical(breaks = c('100.1963', '200.1963'),\n                      labels = c(`100.1963` = 'Democrats ', `200.1963` = 'Republicans'),\n                      values = c('#4040ff', '#ff4040', '#6060ff', '#ff6060'),\n                      name = NULL, guide = 'legend') +\n  theme_light() +\n  theme(panel.border = element_blank(),\n        axis.text.y = element_text(vjust = 0),\n        legend.position = c(1, 1),\n        legend.justification = c(1, 1),\n        legend.direction = 'horizontal',\n        legend.background = element_rect(fill = 'white'))\n#> Picking joint bandwidth of 0.0465\n#> Warning: Removed 1 rows containing non-finite values (`stat_density_ridges()`).\n```\n\n::: {.cell-output-display}\n![](week10_Many_Distribution_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "week10_Many_Distribution_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
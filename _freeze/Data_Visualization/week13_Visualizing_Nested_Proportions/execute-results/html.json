{
  "hash": "be19675301cb36b17804ccbf795c9410",
  "result": {
    "markdown": "---\ntitle: 'Visualizing Nested Proportions'\nauthor: 'Jinwon Lee'\ndate: '2023-05-17'\ncategories: [Visualization, Code, R]\npage-layout: full\nimage: \"./image/nested_proportion.png\"\noutput:\n  prettydoc::html_pretty:\n    theme: architect\n    highlight: github\neditor_options: \n  chunk_output_type: console\nmainfont: NanumGothic\n---\n\n\n# 11. Visualizing Nested Proportions - 비율 데이터를 내포 형태로 시각화\n\n\n\n\n\n## 11.2 Mosaic plots and treemaps - 모자이크와 트리맵\n\n### Figure 11.3\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data\nbridges <- read.csv('./data/bridges.csv')\nbridges %>% sapply(class)\n#>     IDENTIF       RIVER    LOCATION     ERECTED     PURPOSE      LENGTH \n#> \"character\" \"character\"   \"numeric\" \"character\" \"character\" \"character\" \n#>       LANES     CLEAR.G      T.OR.D    MATERIAL        SPAN       REL.L \n#>   \"integer\" \"character\" \"character\" \"character\" \"character\" \"character\" \n#>        TYPE \n#> \"character\"\nbridges %>% head()\n#>   IDENTIF RIVER LOCATION ERECTED  PURPOSE LENGTH LANES CLEAR.G  T.OR.D MATERIAL\n#> 1      E1     M        3  CRAFTS  HIGHWAY   <NA>     2       N THROUGH     WOOD\n#> 2      E2     A       25  CRAFTS  HIGHWAY MEDIUM     2       N THROUGH     WOOD\n#> 3      E3     A       39  CRAFTS AQUEDUCT   <NA>     1       N THROUGH     WOOD\n#> 4      E5     A       29  CRAFTS  HIGHWAY MEDIUM     2       N THROUGH     WOOD\n#> 5      E6     M       23  CRAFTS  HIGHWAY   <NA>     2       N THROUGH     WOOD\n#> 6      E7     A       27  CRAFTS  HIGHWAY  SHORT     2       N THROUGH     WOOD\n#>     SPAN REL.L TYPE\n#> 1  SHORT     S WOOD\n#> 2  SHORT     S WOOD\n#> 3   <NA>     S WOOD\n#> 4  SHORT     S WOOD\n#> 5   <NA>     S WOOD\n#> 6 MEDIUM     S WOOD\n\n# 재료(MATERIAL) -> factor()\nbridges <- bridges %>%\n  mutate(MATERIAL = factor(MATERIAL, levels = c('WOOD', 'STEEL', 'IRON')))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Figure 11.3 - 기본(원자료)\nbridges %>%\n  ggplot() +\n  geom_mosaic(aes(x = product(MATERIAL, ERECTED), fill = MATERIAL),\n              offset = 0, color = 'white')\n#> Warning: `unite_()` was deprecated in tidyr 1.2.0.\n#> ℹ Please use `unite()` instead.\n#> ℹ The deprecated feature was likely used in the ggmosaic package.\n#>   Please report the issue at <https://github.com/haleyjeppson/ggmosaic>.\n```\n\n::: {.cell-output-display}\n![](week13_Visualizing_Nested_Proportions_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\n# Figure 11.3 - 기본(원자료) + 텍스트\nbridges %>%\n  ggplot() +\n  geom_mosaic(aes(x = product(MATERIAL, ERECTED), fill = MATERIAL),\n              offset = 0, color = 'white') +\n  geom_mosaic_text(aes(x = product(MATERIAL, ERECTED), fill = MATERIAL))\n```\n\n::: {.cell-output-display}\n![](week13_Visualizing_Nested_Proportions_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n\n# Figure 11.3 - 기본(원자료) + 숫자\nbridges %>%\n  ggplot() +\n  geom_mosaic(aes(x = product(MATERIAL, ERECTED), fill = MATERIAL),\n              offset = 0, color = 'white') +\n  geom_text(data = layer_data() %>% filter(.wt > 0),\n            aes(x = (xmin + xmax) / 2,\n                y = (ymin + ymax) / 2, label = .wt), color = 'white')\n```\n\n::: {.cell-output-display}\n![](week13_Visualizing_Nested_Proportions_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\n\n# Figure 11.3 - 원자료\nbridges %>%\n  ggplot() +\n  geom_mosaic(aes(x = product(MATERIAL, ERECTED), fill = MATERIAL),\n              offset = 0, color = 'white') +\n  geom_text(data = layer_data() %>% filter(.wt > 0),\n            aes(x = (xmin + xmax) / 2,\n                y = (ymin + ymax) / 2, label = .wt), color = 'white') +\n  scale_y_productlist(name = '', expand = c(0, 0), breaks = NULL) +\n  scale_x_productlist(name = '', expand = c(0, 0)) +\n  theme_minimal() +\n  theme(panel.grid.major.x = element_blank(),\n        panel.grid.major.y = element_blank())\n```\n\n::: {.cell-output-display}\n![](week13_Visualizing_Nested_Proportions_files/figure-html/unnamed-chunk-2-4.png){width=672}\n:::\n:::\n\n\n#### 자료 요약\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# (1) group_by & summarise\nbridges_sum <- bridges %>%\n  filter(!is.na(MATERIAL)) %>%\n  group_by(MATERIAL, ERECTED) %>%\n  summarise(count = n())\n#> `summarise()` has grouped output by 'MATERIAL'. You can override using the\n#> `.groups` argument.\n\n# (2) table & melt\nbridges_sum <- select(bridges, MATERIAL, ERECTED) %>%\n  table() %>%\n  reshape2::melt(value.name = 'count')\n\n# Figure 11.3 - 기본\nbridges_sum %>%\n  ggplot() +\n  geom_mosaic(aes(x = product(MATERIAL, ERECTED), fill = MATERIAL),\n              offset = 0, color = 'white')\n```\n\n::: {.cell-output-display}\n![](week13_Visualizing_Nested_Proportions_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\n# Figure 11.3\nbridges_sum %>%\n  ggplot() +\n  geom_mosaic(aes(x = product(MATERIAL, ERECTED), \n                  weight = count, fill = MATERIAL),\n              offset = 0, color = 'white') +\n  geom_text(data = layer_data() %>% filter(.wt > 0),\n            aes(x = (xmin + xmax) / 2,\n                y = (ymin + ymax) / 2, label = .wt), color = 'white') +\n  scale_y_productlist(name = '', expand = c(0, 0), breaks = NULL) +\n  scale_x_productlist(name = '', expand = c(0, 0)) +\n  scale_fill_manual(name = '', values = c('#D55E00D0', '#0072B2D0', '#009E73D0'))\n```\n\n::: {.cell-output-display}\n![](week13_Visualizing_Nested_Proportions_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\n  theme_minimal() +\n  theme(panel.grid.major.x = element_blank(),\n        panel.grid.major.y = element_blank())\n#> List of 97\n#>  $ line                      :List of 6\n#>   ..$ colour       : chr \"black\"\n#>   ..$ linewidth    : num 0.5\n#>   ..$ linetype     : num 1\n#>   ..$ lineend      : chr \"butt\"\n#>   ..$ arrow        : logi FALSE\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n#>  $ rect                      :List of 5\n#>   ..$ fill         : chr \"white\"\n#>   ..$ colour       : chr \"black\"\n#>   ..$ linewidth    : num 0.5\n#>   ..$ linetype     : num 1\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n#>  $ text                      :List of 11\n#>   ..$ family       : chr \"\"\n#>   ..$ face         : chr \"plain\"\n#>   ..$ colour       : chr \"black\"\n#>   ..$ size         : num 11\n#>   ..$ hjust        : num 0.5\n#>   ..$ vjust        : num 0.5\n#>   ..$ angle        : num 0\n#>   ..$ lineheight   : num 0.9\n#>   ..$ margin       : 'margin' num [1:4] 0points 0points 0points 0points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : logi FALSE\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ title                     : NULL\n#>  $ aspect.ratio              : NULL\n#>  $ axis.title                : NULL\n#>  $ axis.title.x              :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : num 1\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 2.75points 0points 0points 0points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ axis.title.x.top          :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : num 0\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 0points 0points 2.75points 0points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ axis.title.x.bottom       : NULL\n#>  $ axis.title.y              :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : num 1\n#>   ..$ angle        : num 90\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 0points 2.75points 0points 0points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ axis.title.y.left         : NULL\n#>  $ axis.title.y.right        :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : num 0\n#>   ..$ angle        : num -90\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.75points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ axis.text                 :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : chr \"grey30\"\n#>   ..$ size         : 'rel' num 0.8\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : NULL\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : NULL\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ axis.text.x               :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : num 1\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 2.2points 0points 0points 0points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ axis.text.x.top           :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : num 0\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 0points 0points 2.2points 0points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ axis.text.x.bottom        : NULL\n#>  $ axis.text.y               :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : num 1\n#>   ..$ vjust        : NULL\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 0points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ axis.text.y.left          : NULL\n#>  $ axis.text.y.right         :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : num 0\n#>   ..$ vjust        : NULL\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.2points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ axis.ticks                : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ axis.ticks.x              : NULL\n#>  $ axis.ticks.x.top          : NULL\n#>  $ axis.ticks.x.bottom       : NULL\n#>  $ axis.ticks.y              : NULL\n#>  $ axis.ticks.y.left         : NULL\n#>  $ axis.ticks.y.right        : NULL\n#>  $ axis.ticks.length         : 'simpleUnit' num 2.75points\n#>   ..- attr(*, \"unit\")= int 8\n#>  $ axis.ticks.length.x       : NULL\n#>  $ axis.ticks.length.x.top   : NULL\n#>  $ axis.ticks.length.x.bottom: NULL\n#>  $ axis.ticks.length.y       : NULL\n#>  $ axis.ticks.length.y.left  : NULL\n#>  $ axis.ticks.length.y.right : NULL\n#>  $ axis.line                 : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ axis.line.x               : NULL\n#>  $ axis.line.x.top           : NULL\n#>  $ axis.line.x.bottom        : NULL\n#>  $ axis.line.y               : NULL\n#>  $ axis.line.y.left          : NULL\n#>  $ axis.line.y.right         : NULL\n#>  $ legend.background         : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ legend.margin             : 'margin' num [1:4] 5.5points 5.5points 5.5points 5.5points\n#>   ..- attr(*, \"unit\")= int 8\n#>  $ legend.spacing            : 'simpleUnit' num 11points\n#>   ..- attr(*, \"unit\")= int 8\n#>  $ legend.spacing.x          : NULL\n#>  $ legend.spacing.y          : NULL\n#>  $ legend.key                : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ legend.key.size           : 'simpleUnit' num 1.2lines\n#>   ..- attr(*, \"unit\")= int 3\n#>  $ legend.key.height         : NULL\n#>  $ legend.key.width          : NULL\n#>  $ legend.text               :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : 'rel' num 0.8\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : NULL\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : NULL\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ legend.text.align         : NULL\n#>  $ legend.title              :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : num 0\n#>   ..$ vjust        : NULL\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : NULL\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ legend.title.align        : NULL\n#>  $ legend.position           : chr \"right\"\n#>  $ legend.direction          : NULL\n#>  $ legend.justification      : chr \"center\"\n#>  $ legend.box                : NULL\n#>  $ legend.box.just           : NULL\n#>  $ legend.box.margin         : 'margin' num [1:4] 0cm 0cm 0cm 0cm\n#>   ..- attr(*, \"unit\")= int 1\n#>  $ legend.box.background     : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ legend.box.spacing        : 'simpleUnit' num 11points\n#>   ..- attr(*, \"unit\")= int 8\n#>  $ panel.background          : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ panel.border              : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ panel.spacing             : 'simpleUnit' num 5.5points\n#>   ..- attr(*, \"unit\")= int 8\n#>  $ panel.spacing.x           : NULL\n#>  $ panel.spacing.y           : NULL\n#>  $ panel.grid                :List of 6\n#>   ..$ colour       : chr \"grey92\"\n#>   ..$ linewidth    : NULL\n#>   ..$ linetype     : NULL\n#>   ..$ lineend      : NULL\n#>   ..$ arrow        : logi FALSE\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n#>  $ panel.grid.major          : NULL\n#>  $ panel.grid.minor          :List of 6\n#>   ..$ colour       : NULL\n#>   ..$ linewidth    : 'rel' num 0.5\n#>   ..$ linetype     : NULL\n#>   ..$ lineend      : NULL\n#>   ..$ arrow        : logi FALSE\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n#>  $ panel.grid.major.x        : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ panel.grid.major.y        : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ panel.grid.minor.x        : NULL\n#>  $ panel.grid.minor.y        : NULL\n#>  $ panel.ontop               : logi FALSE\n#>  $ plot.background           : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ plot.title                :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : 'rel' num 1.2\n#>   ..$ hjust        : num 0\n#>   ..$ vjust        : num 1\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 0points 0points 5.5points 0points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ plot.title.position       : chr \"panel\"\n#>  $ plot.subtitle             :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : num 0\n#>   ..$ vjust        : num 1\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 0points 0points 5.5points 0points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ plot.caption              :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : 'rel' num 0.8\n#>   ..$ hjust        : num 1\n#>   ..$ vjust        : num 1\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 5.5points 0points 0points 0points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ plot.caption.position     : chr \"panel\"\n#>  $ plot.tag                  :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : 'rel' num 1.2\n#>   ..$ hjust        : num 0.5\n#>   ..$ vjust        : num 0.5\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : NULL\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ plot.tag.position         : chr \"topleft\"\n#>  $ plot.margin               : 'margin' num [1:4] 5.5points 5.5points 5.5points 5.5points\n#>   ..- attr(*, \"unit\")= int 8\n#>  $ strip.background          : list()\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n#>  $ strip.background.x        : NULL\n#>  $ strip.background.y        : NULL\n#>  $ strip.clip                : chr \"inherit\"\n#>  $ strip.placement           : chr \"inside\"\n#>  $ strip.text                :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : chr \"grey10\"\n#>   ..$ size         : 'rel' num 0.8\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : NULL\n#>   ..$ angle        : NULL\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : 'margin' num [1:4] 4.4points 4.4points 4.4points 4.4points\n#>   .. ..- attr(*, \"unit\")= int 8\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ strip.text.x              : NULL\n#>  $ strip.text.x.bottom       : NULL\n#>  $ strip.text.x.top          : NULL\n#>  $ strip.text.y              :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : NULL\n#>   ..$ angle        : num -90\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : NULL\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ strip.text.y.left         :List of 11\n#>   ..$ family       : NULL\n#>   ..$ face         : NULL\n#>   ..$ colour       : NULL\n#>   ..$ size         : NULL\n#>   ..$ hjust        : NULL\n#>   ..$ vjust        : NULL\n#>   ..$ angle        : num 90\n#>   ..$ lineheight   : NULL\n#>   ..$ margin       : NULL\n#>   ..$ debug        : NULL\n#>   ..$ inherit.blank: logi TRUE\n#>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n#>  $ strip.text.y.right        : NULL\n#>  $ strip.switch.pad.grid     : 'simpleUnit' num 2.75points\n#>   ..- attr(*, \"unit\")= int 8\n#>  $ strip.switch.pad.wrap     : 'simpleUnit' num 2.75points\n#>   ..- attr(*, \"unit\")= int 8\n#>  - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n#>  - attr(*, \"complete\")= logi TRUE\n#>  - attr(*, \"validate\")= logi TRUE\n```\n:::\n\n\n### Figure 11.4\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Treemap\nbridges_sum %>% with(interaction(ERECTED, MATERIAL)) %>% levels()\n#>  [1] \"CRAFTS.WOOD\"    \"EMERGING.WOOD\"  \"MATURE.WOOD\"    \"MODERN.WOOD\"   \n#>  [5] \"CRAFTS.STEEL\"   \"EMERGING.STEEL\" \"MATURE.STEEL\"   \"MODERN.STEEL\"  \n#>  [9] \"CRAFTS.IRON\"    \"EMERGING.IRON\"  \"MATURE.IRON\"    \"MODERN.IRON\"\n\nfill_cols <- c('#FFEEEBD0', '#FFBBA9D0', '#FF834AD0', '#D55E00D0', \n               '#E7F0FFD0', '#94C6FFD0', '#579BDBD0', '#0072B2D0', \n               '#C6FFE5D0', '#76E3B8D0', '#4BC095D0', '#009E73D0')\n\nbridges_sum %>%\n  ggplot(aes(area = count, subgroup = MATERIAL,\n             fill = interaction(ERECTED, MATERIAL))) +\n  geom_treemap(color = 'white', size = 0.5 * .pt, alpha = NA) +\n  geom_treemap_subgroup_text(colour = 'grey50', place = 'center',\n                             alpha = 0.7, grow = T) +\n  geom_treemap_subgroup_border(color = 'white') +\n  geom_treemap_text(aes(label = ERECTED, color = interaction(ERECTED, MATERIAL)),\n                    color = 'black', place = 'center', grow = F) +\n  scale_fill_manual(values = fill_cols) +\n  guides(colour = 'none', fill = 'none')\n```\n\n::: {.cell-output-display}\n![](week13_Visualizing_Nested_Proportions_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### Figure 11.5\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data\nUS_census <- read.csv('./data/US_census.csv')\nUS_regions <- read.csv('./data/US_regions.csv')\n\npopulation_df <- left_join(US_census, US_regions) %>%\n  group_by(region, division, state) %>%\n  summarize(pop2000 = sum(pop2000, na.rm = TRUE),\n            pop2010 = sum(pop2010, na.rm = TRUE),\n            area = sum(area)) %>%\n  ungroup() %>%\n  mutate(state = factor(state, levels = state),\n         region = factor(region, levels = c('West', 'South', 'Midwest', 'Northeast')))\n#> Joining with `by = join_by(state)`\n#> `summarise()` has grouped output by 'region', 'division'. You can override\n#> using the `.groups` argument.\n```\n:::\n\n\n#### Manually add colors\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Hues\nhues <- c(50, 100, 250, 300) # brown, green, blue, purple\n\n# Minimum and Maximum population density\nminpop <- min(population_df$pop2010)\nmaxpop <- max(population_df$pop2010)\n\n# Turn pop density into color\npopulation_df_color <- population_df %>%\n  mutate(index = as.numeric(factor(region))) %>%\n  group_by(index) %>%\n  mutate(value = (pop2010 - minpop) / (maxpop - minpop),\n         fill = scales::gradient_n_pal(\n           colorspace::sequential_hcl(\n             6, h = hues[index], c = c(45, 20),\n             l = c(30, 80), power = .5))(1 - value))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Figure 11.5\npopulation_df_color %>%\n  ggplot(aes(area = area, subgroup = region, fill = fill)) +\n  geom_treemap(color = 'white', size = 0.5 * .pt, alpha = NA) +\n  geom_treemap_subgroup_text(colour = 'white', place = 'center',\n                             alpha = 0.7, grow = T) +\n  geom_treemap_subgroup_border(color = 'white') +\n  geom_treemap_text(aes(label = state), color = 'black',\n                    place = 'center', grow = F) +\n  scale_fill_identity() +\n  guides(colour = 'none', fill = 'none')\n```\n\n::: {.cell-output-display}\n![](week13_Visualizing_Nested_Proportions_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\n# Region Colors\ncol_n <- population_df$region %>% table()\n# population_df_color <- population_df %>%\n#   arrange(region, area %>% desc()) %>%\n#   mutate(value = (pop2010 - minpop) / (maxpop - minpop),\n#          fill = mapply(lighten, qualitative_hcl(length(col_n), palette = 'Dark 3'),\n#                        maaply(seq, -.2, .8, length = col_n)) %>% unlist())\n```\n:::\n\n\n## 11.3 Nested Pies - 내포 파이 차트\n\n## 11.4 Parallel Set - 평행 집합\n\n### Figure 11.8\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data\nbridges_data <- read.csv('./data/bridges_data.csv')\nbridges_data$x <- factor(bridges_data$x, levels = c('material', 'length', 'erected', 'river'))\n\nggplot(bridges_data, aes(x, id = id, split = y, value = count)) +\n  geom_parallel_sets(aes(fill = material), alpha = 0.5, axis.width = 0.13) +\n  geom_parallel_sets_axes(axis.width = 0.1, fill = 'grey80', color = 'grey80') +\n  geom_parallel_sets_labels(color = 'black', size = 10 / .pt, angle = 90) +\n  scale_x_discrete(name = NULL, expand = c(0, 0.2)) +\n  scale_y_continuous(breaks = NULL, expand = c(0, 0)) +\n  scale_fill_manual(values = c(iron = '#D55E00D0', wood = '#009E73D0', steel = '#0072B2D0'),\n                    guide = 'none') + \n  theme_minimal() +\n  theme(panel.grid.major.x = element_blank(),\n        axis.line = element_blank(),\n        axis.ticks = element_blank(),\n        plot.margin = margin(14, 1.5, 2, 1.5))\n```\n\n::: {.cell-output-display}\n![](week13_Visualizing_Nested_Proportions_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::",
    "supporting": [
      "week13_Visualizing_Nested_Proportions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}